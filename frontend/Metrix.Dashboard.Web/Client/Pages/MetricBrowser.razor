@page "/metric/browser"
@using Metrix.Models
@using Metrix.Http
@using Metrix.Models.Frontend

<h3>Metric Browser</h3>

<EditForm EditContext="_editContext">
    <div class="row">
        <div class="col-lg-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="mb-2">Options</h5>
                    <InputSelect class="form-select mb-2"
                                 ValueChanged="@((string value) => LoadDataPoints(value))"
                                 ValueExpression="@(() => _model.SelectedDataGroup)"
                                 Value="@_model.SelectedDataGroup">
                        @foreach (var grouping in _dataGroupings)
                        {
                            <option value="@grouping">@grouping</option>
                        }
                    </InputSelect>
                    <InputSelect class="form-select mb-2" @bind-Value="_model.SelectedDataPoint">
                        @foreach (var point in _dataPoints)
                        {
                            <option value="@point">@point</option>
                        }
                    </InputSelect>
                    <div class="mb-2">
                        <label>Start Date</label>
                        <input class="form-control mb-sm-1" type="date" @bind="_model.StartDate" />
                        <input class="form-control mb-sm-1" type="time" @bind="_model.StartTime" />
                    </div>
                    <div class="mb-2">
                        <label>End Date</label>
                        <input class="form-control mb-sm-1" type="date" @bind="_model.EndDate" />
                        <input class="form-control mb-sm-1" type="time" @bind="_model.EndTime" />
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-8">
            <div class="card">
                <div class="card-body">
                    <h5>@_model.SelectedDataGroup - @_model.SelectedDataPoint</h5>
                    <div class="chart-body"></div>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@inject IJSRuntime _js
@inject HttpClient _client
@inject MetrixClient _metrixClient

@code {
    private List<string> _dataGroupings;
    private List<string> _dataPoints;
    private MetricBrowserModel _model;
    private EditContext _editContext;

    public MetricBrowser()
    {
        _model = new MetricBrowserModel();
        _editContext = new EditContext(_model);
        _dataGroupings = new List<string>();
        _dataPoints = new List<string>();
    }

    protected override async Task OnInitializedAsync()
    {
        _dataGroupings = await _metrixClient.GetMetricDataGroupings();
        _model.SelectedDataGroup = _dataGroupings[0];
        _dataPoints = await _metrixClient.GetMetricDataPointsForGrouping(_model.SelectedDataGroup);
        _model.SelectedDataPoint = _dataPoints[0];
        await LoadGraph();
    }

    private async Task LoadDataPoints(string value)
    {
        _model.SelectedDataGroup = value;
        _dataPoints = await _metrixClient.GetMetricDataPointsForGrouping(_model.SelectedDataGroup);
    }

    private async Task LoadGraph()
    {
        await _metrixClient.GetMetricSeries(new MetricRangeQuery
        {
            MetricQuery = new MetricQuery
            {
                DataGroup = _model.SelectedDataGroup,
                DataPoint = _model.SelectedDataPoint
            },
            StartDate = new DateTime(
                _model.StartDate.Value.Year,
                _model.StartDate.Value.Month,
                _model.StartDate.Value.Day,
                _model.StartTime.Value.Hour,
                _model.StartTime.Value.Minute,
                _model.StartTime.Value.Second),
            EndDate = new DateTime(
                _model.EndDate.Value.Year,
                _model.EndDate.Value.Month,
                _model.EndDate.Value.Day,
                _model.EndTime.Value.Hour,
                _model.EndTime.Value.Minute,
                _model.EndTime.Value.Second)
        });
    }
}
